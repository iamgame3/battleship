(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var i=e.g.document;if(!t&&i&&(i.currentScript&&(t=i.currentScript.src),!t)){var a=i.getElementsByTagName("script");a.length&&(t=a[a.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=e=>({length:e,hits:0,sunk:!1,isSunk(){return this.hits===this.length},hit(){this.hits+=1,!0===this.isSunk()&&(this.sunk=!0)}}),i=()=>{const e=[],i=["a","b","c","d","e","f","g","h","i","j"];for(let t=0;t<10;t+=1)for(let a=1;a<11;a+=1)e.push(`${i[t]}${a}`);const a=[];for(let e=0;e<100;e+=1)a.push("");const s=[];for(let e=0;e<100;e+=1)s.push("");return{positions:e,gameboard:a,shipPositions:s,ships:{},subExists:!1,placeShip(e,i){const a=this.positions.indexOf(e),s=this.positions.indexOf(i);let n,d;if(n=(s-a)%10==0?[(s-a)/10+1,"vert"]:[s-a+1,"hor"],5===n[0]&&(d="Aircraft-Carrier"),4===n[0]&&(d="Battleship"),3===n[0]&&(!1===this.subExists?(this.subExists=!0,d="Submarine"):d="Cruiser"),2===n[0]&&(d="Destroyer"),"hor"===n[1])for(let e=a;e<s+1;e+=1)this.shipPositions[e]=d,this.gameboard[e]=e===a?`${d} end-left-square`:e===s?`${d} end-right-square`:`${d} mid-${n[1]}-square`;else for(let e=a;e<s+1;e+=10)this.shipPositions[e]=d,this.gameboard[e]=e===a?`${d} end-top-square`:e===s?`${d} end-bottom-square`:`${d} mid-${n[1]}-square`;return this.ships[d]=t(n[0]),this.ships[d]},receiveAttack(e){if(this.gameboard[e]){const t=this.gameboard[e].split(" ");return this.ships[t[0]].hit(),this.gameboard[e]="Hit",["Hit",this.ships[t[0]].isSunk(),t[0]]}return this.gameboard[e]="Miss",["Miss",!1]},allSunk(){let e=!0;for(const t in this.ships)this.ships[t].sunk||(e=!1);return e}}},a=()=>({gameboard:i(),attack:(e,t)=>e.receiveAttack(t)}),s=e=>{for(let t=0;t<5;t+=1){let i;if(i=0===t?1:1===t||2===t?2:3===t?3:4,Math.random()<.5)for(;;){const t=Math.round(99*Math.random());if(Math.floor(t/10)===Math.floor((t+i)/10)&&t+i<100){let a=!0;for(let s=0;s<i+1;s+=1)""!==e.gameboard[t+s]&&(a=!1);if(a){e.placeShip(e.positions[t],e.positions[t+i]);break}}}else for(;;){const t=Math.round(99*Math.random());if(t+10*i<100){let a=!0;for(let s=0;s<10*(i+1);s+=10)""!==e.gameboard[t+s]&&(a=!1);if(a){e.placeShip(e.positions[t],e.positions[t+10*i]);break}}}}return e.gameboard},n=e.p+"cee3247d48e431601d9e.webm",d=e.p+"d2ef55f8b0d7b3db36a2.webm",o=e.p+"9c1dc73f0e4cca6f4190.webm",r=e=>{const t=document.querySelector(".page-container");let r=document.getElementById("player-one").value;""===r&&(r="PLAYER 1");let c=document.getElementById("player-two").value;""===c&&(c="PLAYER 2"),t.replaceChildren();const l=document.createElement("div");l.classList.add("ship-placement-container");const m=document.createElement("h1");m.classList.add("ship-placement-header"),m.textContent=e?`${r}, PLACE YOUR SHIPS`:`${c}, PLACE YOUR SHIPS`,l.appendChild(m);let p=a();s(p.gameboard);let u=document.createElement("div");u.classList.add("ship-placement-grid");for(let e=0;e<100;e+=1){const t=document.createElement("div");if(p.gameboard.gameboard[e]){let i=p.gameboard.gameboard[e];i=i.split(" "),t.classList.add(i[1])}else t.classList.add("normal-square");t.setAttribute("data-id",e),t.style.fontSize="40px",u.appendChild(t)}l.appendChild(u);const h=document.createElement("div");h.classList.add("ship-placement-buttons-container");const b=document.createElement("button");b.classList.add("ship-placement-button"),b.textContent="RANDOMISE",b.addEventListener("click",(()=>{p=a(),s(p.gameboard);const e=document.createElement("div");e.classList.add("ship-placement-grid");for(let t=0;t<100;t+=1){const i=document.createElement("div");if(p.gameboard.gameboard[t]){let e=p.gameboard.gameboard[t];e=e.split(" "),i.classList.add(e[1])}else i.classList.add("normal-square");i.setAttribute("data-id",t),i.style.fontSize="40px",e.appendChild(i)}l.replaceChild(e,u),u=e})),h.appendChild(b);const g=document.createElement("button");g.classList.add("ship-placement-button"),g.textContent="DONE",g.addEventListener("click",(()=>{if(e)((e,t)=>{const a=document.querySelector("body"),r=document.querySelector(".page-container");r.replaceChildren();const c=document.createElement("div"),l=document.createElement("h2"),m=document.createElement("h2");l.textContent="/: MISS",m.textContent="X: HIT",l.classList.add("legend-item"),m.classList.add("legend-item"),c.classList.add("legend"),c.appendChild(l),c.appendChild(m),a.appendChild(c);const p=document.createElement("div"),u=document.createElement("div"),h={gameboard:i(),attack(e,t){const i=e.gameboard,a=()=>{for(;;){const t=Math.round(99*Math.random()),a=i[t];if("Hit"!==a&&"Miss"!==a)return[e.receiveAttack(t),t]}};if(void 0===t)return a();const s=t=>{const n=i[t-10],d=i[t+10];let o,r;if(t%10!=0&&(o=i[t-1]),"9"!==t.toString().substring[1]&&(r=i[t+1]),"Hit"===i[t]){if(e.ships[e.shipPositions[t]].isSunk())return a();if((void 0===n||"Miss"===n)&&"Hit"===d&&!e.ships[e.shipPositions[t+10]].isSunk())return s(t+10);if((void 0===d||"Miss"===d)&&"Hit"===n&&!e.ships[e.shipPositions[t-10]].isSunk())return s(t-10);if((void 0===o||"Miss"===o)&&"Hit"===r&&!e.ships[e.shipPositions[t+1]].isSunk())return s(t+1);if((void 0===r||"Miss"===r)&&"Hit"===o&&!e.ships[e.shipPositions[t-1]].isSunk())return s(t-1);if(n&&d){if("Hit"===n&&"Miss"!==d&&"Hit"!==d)return[e.receiveAttack(t+10),t+10];if("Hit"===d&&"Miss"!==n&&"Hit"!==n)return[e.receiveAttack(t-10),t-10]}if(o&&r){if("Hit"===o&&"Miss"!==r&&"Hit"!==r)return[e.receiveAttack(t+1),t+1];if("Hit"===r&&"Miss"!==o&&"Hit"!==o)return[e.receiveAttack(t-1),t-1]}if(void 0!==n&&"Miss"!==n&&"Hit"!==n)return[e.receiveAttack(t-10),t-10];if(void 0!==o&&"Miss"!==o&&"Hit"!==o)return[e.receiveAttack(t-1),t-1];if(void 0!==r&&"Miss"!==r&&"Hit"!==r)return[e.receiveAttack(t+1),t+1];if(void 0!==d&&"Miss"!==d&&"Hit"!==d)return[e.receiveAttack(t+10),t+10]}if("Hit"===n&&"Hit"===e.gameboard[t-20]&&!e.ships[e.shipPositions[t-10]].isSunk()){let i=t;for(;;){if(i-=10,""===e.gameboard[i])return s(i+10);if("Miss"===e.gameboard[i])return s(i);if(void 0===e.gameboard[i])break}}if("Hit"===o&&"Hit"===e.gameboard[t-2]&&!e.ships[e.shipPositions[t-1]].isSunk()){let i=t;for(;;){if(i-=1,""===e.gameboard[i])return s(i+1);if("Miss"===e.gameboard[i])return s(i);if(void 0===e.gameboard[i])break}}if("Hit"===r&&"Hit"===e.gameboard[t+2]&&!e.ships[e.shipPositions[t+1]].isSunk()){let i=t;for(;;){if(i+=1,""===e.gameboard[i])return s(i-1);if("Miss"===e.gameboard[i])return s(i);if(void 0===e.gameboard[i])break}}if("Hit"===d&&"Hit"===e.gameboard[t+20]&&!e.ships[e.shipPositions[t+10]].isSunk()){let i=t;for(;;){if(i+=10,""===e.gameboard[i])return s(i-10);if("Miss"===e.gameboard[i])return s(i);if(void 0===e.gameboard[i])break}}return"Hit"!==n||"Miss"===e.gameboard[t-20]||void 0===e.gameboard[t-20]||e.ships[e.shipPositions[t-10]].isSunk()?"Hit"!==o||"Miss"===e.gameboard[t-2]||void 0===e.gameboard[t-2]||e.ships[e.shipPositions[t-1]].isSunk()?"Hit"!==r||"Miss"===e.gameboard[t+2]||void 0===e.gameboard[t+2]||e.ships[e.shipPositions[t+1]].isSunk()?"Hit"!==d||"Miss"===e.gameboard[t+20]||void 0===e.gameboard[t+20]||e.ships[e.shipPositions[t+10]].isSunk()?a():s(t+10):s(t+1):s(t-1):s(t-10)};return s(t)}};s(h.gameboard);const b=document.createElement("div");b.classList.add("enemy-grid-sunk"),u.appendChild(b);const g=document.createElement("div"),f=document.createElement("div");f.classList.add("enemy-grid-sunk"),g.appendChild(f);for(let i=0;i<100;i+=1){const s=document.createElement("div");s.classList.add("normal-square"),s.style.fontSize="20px",s.style.cursor="pointer",s.addEventListener("click",(()=>{const r=t.attack(h.gameboard,i);if("Hit"===r[0]){if(s.style.color="red",s.textContent="X",!1===h.gameboard.allSunk()&&new Audio(n).play(),!0===r[1]){const t=document.createElement("div");if(t.textContent=`${r[2]} SUNK!`,t.classList.add("sunken-ship-text"),b.appendChild(t),!0===h.gameboard.allSunk()){const t=document.createElement("div");t.textContent=`${e} WINS!`,t.classList.add("winner-popup");const i=document.createElement("button");i.textContent="BATTLE AGAIN?",i.classList.add("restart-button"),i.addEventListener("click",(()=>{location.reload()})),t.appendChild(i),a.appendChild(t),new Audio(o).play()}}}else s.style.color="gray",s.textContent="/",new Audio(d).play()}),{once:!0}),u.appendChild(s)}u.classList.add("enemy-grid");const C=document.createElement("h2");let v;C.textContent="ENEMY GRID",C.classList.add("enemy-grid-header"),u.appendChild(C),new MutationObserver((()=>{setTimeout((()=>{if(!0===h.gameboard.allSunk())return;const e=h.attack(t.gameboard,v),i=document.querySelector(`[data-id='${e[1]}']`);if(v=e[1],"Hit"===e[0][0]){if(i.style.color="red",i.textContent="X",!1===t.gameboard.allSunk()&&new Audio(n).play(),!0===e[0][1]){const i=document.createElement("div");if(i.textContent=`${e[0][2]} SUNK!`,i.classList.add("sunken-ship-text"),f.appendChild(i),!0===t.gameboard.allSunk()){const e=document.createElement("div");e.textContent="AI WINS!",e.classList.add("winner-popup");const t=document.createElement("button");t.textContent="BATTLE AGAIN?",t.classList.add("restart-button"),t.addEventListener("click",(()=>{location.reload()})),e.appendChild(t),a.appendChild(e),new Audio(o).play()}}}else i.style.color="gray",i.textContent="/",new Audio(d).play()}),1e3)})).observe(u,{attributes:!0,childList:!1,characterData:!1,subtree:!0}),p.classList.add("game-grids-container");for(let e=0;e<100;e+=1){const i=document.createElement("div");if(t.gameboard.gameboard[e]){let a=t.gameboard.gameboard[e];a=a.split(" "),i.classList.add(a[1])}else i.classList.add("normal-square");i.setAttribute("data-id",e),i.style.fontSize="40px",g.appendChild(i)}g.classList.add("your-grid");const E=document.createElement("h2");E.textContent="YOUR GRID",E.classList.add("your-grid-header"),g.appendChild(E),p.appendChild(u),p.appendChild(g),r.appendChild(p)})(r,p);else{const e=document.createElement("h1");e.classList.add("ship-placement-header"),e.textContent=`${r}, PLACE YOUR SHIPS`,l.replaceChild(e,m);let i=a();s(i.gameboard);let f=document.createElement("div");f.classList.add("ship-placement-grid");for(let e=0;e<100;e+=1){const t=document.createElement("div");if(i.gameboard.gameboard[e]){let a=i.gameboard.gameboard[e];a=a.split(" "),t.classList.add(a[1])}else t.classList.add("normal-square");t.setAttribute("data-id",e),t.style.fontSize="40px",f.appendChild(t)}l.replaceChild(f,u);const C=b.cloneNode(!0);C.addEventListener("click",(()=>{i=a(),s(i.gameboard);const e=document.createElement("div");e.classList.add("ship-placement-grid");for(let t=0;t<100;t+=1){const a=document.createElement("div");if(i.gameboard.gameboard[t]){let e=i.gameboard.gameboard[t];e=e.split(" "),a.classList.add(e[1])}else a.classList.add("normal-square");a.setAttribute("data-id",t),a.style.fontSize="40px",e.appendChild(a)}l.replaceChild(e,f),f=e})),h.replaceChild(C,b);const v=g.cloneNode(!0);v.addEventListener("click",(()=>{((e,t,i,a)=>{const s=document.querySelector("body"),r=document.querySelector(".page-container"),c=t.gameboard.gameboard.slice(0),l=a.gameboard.gameboard.slice(0),m=p=>{let u,h,b,g;p?(u=t,h=e,b=c,g=a):(u=a,h=i,b=l,g=t),r.replaceChildren();const f=document.createElement("div"),C=document.createElement("h2"),v=document.createElement("h2");C.textContent="/: MISS",v.textContent="X: HIT",C.classList.add("legend-item"),v.classList.add("legend-item"),f.classList.add("legend"),f.appendChild(C),f.appendChild(v),s.appendChild(f);const E=document.createElement("div"),L=document.createElement("div"),k=document.createElement("div");k.classList.add("enemy-grid-sunk"),L.appendChild(k);for(const e in g.gameboard.ships)if(g.gameboard.ships[e].isSunk()){const t=document.createElement("div");t.textContent=`${e} SUNK!`,t.classList.add("sunken-ship-text"),k.appendChild(t)}const S=document.createElement("div"),y=document.createElement("div");y.classList.add("enemy-grid-sunk"),S.appendChild(y);for(const e in u.gameboard.ships)if(u.gameboard.ships[e].isSunk()){const t=document.createElement("div");t.textContent=`${e} SUNK!`,t.classList.add("sunken-ship-text"),y.appendChild(t)}for(let e=0;e<100;e+=1){const t=document.createElement("div");t.classList.add("normal-square"),t.style.fontSize="20px",t.style.cursor="pointer","Hit"===g.gameboard.gameboard[e]&&(t.style.color="red",t.textContent="X"),"Miss"===g.gameboard.gameboard[e]&&(t.style.color="gray",t.textContent="/"),""===t.textContent&&t.addEventListener("click",(()=>{const i=document.createElement("div");i.classList.add("block-clicks-div"),r.appendChild(i);const a=u.attack(g.gameboard,e);if("Hit"===a[0]){if(t.style.color="red",t.textContent="X",!1===g.gameboard.allSunk()&&new Audio(n).play(),!0===a[1]){const e=document.createElement("div");if(e.textContent=`${a[2]} SUNK!`,e.classList.add("sunken-ship-text"),k.appendChild(e),!0===g.gameboard.allSunk()){const e=document.createElement("div");e.textContent=`${h} WINS!`,e.classList.add("winner-popup");const t=document.createElement("button");t.textContent="BATTLE AGAIN?",t.classList.add("restart-button"),t.addEventListener("click",(()=>{location.reload()})),e.appendChild(t),s.appendChild(e),new Audio(o).play()}}}else t.style.color="gray",t.textContent="/",new Audio(d).play()})),L.appendChild(t)}L.classList.add("enemy-grid");const x=document.createElement("h2");x.textContent="ENEMY GRID",x.classList.add("enemy-grid-header"),L.appendChild(x),new MutationObserver((()=>{setTimeout((()=>{if(!0===g.gameboard.allSunk())return;r.replaceChildren(),s.removeChild(f);const e=document.createElement("div");e.classList.add("pass-device-container");const t=document.createElement("h1");t.classList.add("pass-device-header"),t.textContent="PASS DEVICE";const i=document.createElement("button");i.classList.add("pass-device-button"),i.textContent="DONE",e.appendChild(t),e.appendChild(i),r.appendChild(e),i.addEventListener("click",(()=>{m(p=!p)}))}),1500)})).observe(L,{attributes:!0,childList:!1,characterData:!1,subtree:!0}),E.classList.add("game-grids-container");for(let e=0;e<100;e+=1){const t=document.createElement("div");if(""!==b[e]){let i=b[e];i=i.split(" "),t.classList.add(i[1])}else t.classList.add("normal-square");t.style.fontSize="40px","Hit"===u.gameboard.gameboard[e]&&(t.style.color="red",t.textContent="X"),"Miss"===u.gameboard.gameboard[e]&&(t.style.color="gray",t.textContent="/"),S.appendChild(t)}S.classList.add("your-grid");const A=document.createElement("h2");A.textContent="YOUR GRID",A.classList.add("your-grid-header"),S.appendChild(A),E.appendChild(L),E.appendChild(S),r.appendChild(E)};m(!0)})(r,i,c,p)})),h.replaceChild(v,g),l.appendChild(h),t.appendChild(l)}})),h.appendChild(g),l.appendChild(h),t.appendChild(l)},c=document.querySelector(".player-two-select-ai-button");let l=!1;c.addEventListener("click",(()=>{l?(l=!1,c.classList.remove("player-two-select-ai-button-active"),c.classList.add("player-two-select-ai-button-inactive")):(l=!0,c.classList.remove("player-two-select-ai-button-inactive"),c.classList.add("player-two-select-ai-button-active"))})),document.querySelector(".game-start-button").addEventListener("click",(()=>{r(l)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,